version: "3.8"

services:
# RabbitMQ
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 5s
      timeout: 5s
      retries: 3

# Database
  db:
    container_name: db
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_ENCODING=UTF8
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 10s
      retries: 3

# User Manager
  user:
    container_name: user
    build: ./user
    restart: always
    ports:
     - "8010:8010"
    environment:
      - MODE=prod
      - PORT=8010
      - GIN_MODE=release
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_ENCODING=UTF8
      - POSTGRES_LOG_LEVEL=silent
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy


# Zone Manager
  zone:
    container_name: zone
    build: ./zone
    restart: always
    ports:
     - "8011:8011"
    environment:
      - MODE=prod
      - PORT=8011
      - GIN_MODE=release
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_ENCODING=UTF8
      - POSTGRES_LOG_LEVEL=silent
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

# Peripheral Service
  peripheral:
    container_name: peripheral
    build: ./peripheral
    restart: always
    ports:
     - "8012:8012"
    environment:
      - MODE=prod
      - PORT=8012
      - GIN_MODE=release
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    depends_on:
      rabbitmq:
        condition: service_healthy


# Workout Manager
  workout:
    container_name: workout
    build: ./workout
    restart: always
    ports:
     - "8013:8013"
    environment:
      - MODE=prod
      - PORT=8013
      - GIN_MODE=release
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_ENCODING=UTF8
      - POSTGRES_LOG_LEVEL=silent
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      peripheral:
        condition: service_started
      user:
        condition: service_started


#Challenge Manager
  challenge:
    container_name: challenge
    build: ./challenge
    restart: always
    ports:
     - "8014:8014"
    environment:
      - MODE=prod
      - PORT=8014
      - GIN_MODE=release
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_ENCODING=UTF8
      - POSTGRES_LOG_LEVEL=silent
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
