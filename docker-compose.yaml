version: "3.8"

services:
# RabbitMQ
  # rabbitmq:
  #   container_name: rabbitmq
  #   image: rabbitmq:management
  #   ports:
  #     - "5672:5672"
  #     - "15672:15672"
  #   healthcheck:
  #     test: rabbitmq-diagnostics check_port_connectivity
  #     interval: 5s
  #     timeout: 5s
  #     retries: 3

# User Service
  user:
    container_name: user
    build: ./user
    restart: always
    ports:
     - "8000:8000"
    environment:
      - MODE=prod
      - PORT=8000
      - GIN_MODE=release
      - POSTGRES_HOST=user-db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_ENCODING=UTF8
      - POSTGRES_LOG_LEVEL=silent
    depends_on:
      user-db:
        condition: service_healthy
    networks:
      - user-network

  user-db:
    container_name: user-db
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_ENCODING=UTF8
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 3
    networks:
      - user-network

# Challenge Service
  challenge:
    container_name: challenge
    build: ./challenge
    restart: always
    ports:
     - "8001:8001"
    environment:
      - MODE=prod
      - PORT=8001
      - GIN_MODE=release
      - POSTGRES_HOST=challenge-db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_ENCODING=UTF8
      - POSTGRES_LOG_LEVEL=silent
      - RABBITMQ_HOSTNAME=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
    depends_on:
      challenge-db:
        condition: service_healthy
      # workout:
      #   condition: service_started
      # rabbitmq:
      #   condition: service_healthy
    networks:
      - challenge-network

  challenge-db:
    container_name: challenge-db
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_ENCODING=UTF8
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 10s
      retries: 3
    networks:
      - challenge-network
# Other Service
  # hrm:
  #   container_name: hrm
  #   build: ./hrm
  #   ports:
  #     - "8004:8004"
  #   environment:
  #     - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
  #     #- POSTGRES_URL=postgres://postgres:postgres@postgres:5432/postgres
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #     player:
  #       condition: service_started

  # workout:
  #   container_name: workout
  #   build: ./workout
  #   ports:
  #     - "8001:8001"
  #   environment:
  #     - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #     hrm:
  #       condition: service_started
  #     player:
  #       condition: service_started

networks:
  user-network:
    driver: bridge
  challenge-network:
    driver: bridge
